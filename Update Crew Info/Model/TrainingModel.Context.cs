//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Update_Crew_Info.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DTV_CabinetEntities : DbContext
    {
        public DTV_CabinetEntities()
            : base("name=DTV_CabinetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<t_TrainingTypeCategory> t_TrainingTypeCategory { get; set; }
        public DbSet<t_TrainingClass> t_TrainingClass { get; set; }
        public DbSet<t_TrainingTypeProgramCategory> t_TrainingTypeProgramCategory { get; set; }
        public DbSet<t_TrainingTypeSubjectCategory> t_TrainingTypeSubjectCategory { get; set; }
        public DbSet<t_TrainingClassStudent> t_TrainingClassStudent { get; set; }
    
        public virtual ObjectResult<sp_TrainingStudentStatistic_L_Result> sp_TrainingStudentStatistic_L(Nullable<short> filterTrainingID1, Nullable<short> filterTrainingID2, Nullable<short> filterTrainingID3, Nullable<byte> filter1DataType, Nullable<byte> filter2DataType, Nullable<byte> filter3DataType, Nullable<byte> filter1FinalResult, Nullable<byte> filter2FinalResult, Nullable<byte> filter3FinalResult, string classIDs, string crewID, string crewNameNU, Nullable<System.DateTime> toDate, string employerIDs, string employerIDsEx, string employerTypes, string employerTypesEx, string employerStatusCodes, string employerStatusCodesEx, Nullable<bool> employerStatusCodesIsEmpty, string bases, string basesEx, string crewTitles, string crewTitlesEx, string flyCapability, string flyCapabilityEx, Nullable<bool> teacher, Nullable<byte> gender)
        {
            var filterTrainingID1Parameter = filterTrainingID1.HasValue ?
                new ObjectParameter("FilterTrainingID1", filterTrainingID1) :
                new ObjectParameter("FilterTrainingID1", typeof(short));
    
            var filterTrainingID2Parameter = filterTrainingID2.HasValue ?
                new ObjectParameter("FilterTrainingID2", filterTrainingID2) :
                new ObjectParameter("FilterTrainingID2", typeof(short));
    
            var filterTrainingID3Parameter = filterTrainingID3.HasValue ?
                new ObjectParameter("FilterTrainingID3", filterTrainingID3) :
                new ObjectParameter("FilterTrainingID3", typeof(short));
    
            var filter1DataTypeParameter = filter1DataType.HasValue ?
                new ObjectParameter("Filter1DataType", filter1DataType) :
                new ObjectParameter("Filter1DataType", typeof(byte));
    
            var filter2DataTypeParameter = filter2DataType.HasValue ?
                new ObjectParameter("Filter2DataType", filter2DataType) :
                new ObjectParameter("Filter2DataType", typeof(byte));
    
            var filter3DataTypeParameter = filter3DataType.HasValue ?
                new ObjectParameter("Filter3DataType", filter3DataType) :
                new ObjectParameter("Filter3DataType", typeof(byte));
    
            var filter1FinalResultParameter = filter1FinalResult.HasValue ?
                new ObjectParameter("Filter1FinalResult", filter1FinalResult) :
                new ObjectParameter("Filter1FinalResult", typeof(byte));
    
            var filter2FinalResultParameter = filter2FinalResult.HasValue ?
                new ObjectParameter("Filter2FinalResult", filter2FinalResult) :
                new ObjectParameter("Filter2FinalResult", typeof(byte));
    
            var filter3FinalResultParameter = filter3FinalResult.HasValue ?
                new ObjectParameter("Filter3FinalResult", filter3FinalResult) :
                new ObjectParameter("Filter3FinalResult", typeof(byte));
    
            var classIDsParameter = classIDs != null ?
                new ObjectParameter("ClassIDs", classIDs) :
                new ObjectParameter("ClassIDs", typeof(string));
    
            var crewIDParameter = crewID != null ?
                new ObjectParameter("CrewID", crewID) :
                new ObjectParameter("CrewID", typeof(string));
    
            var crewNameNUParameter = crewNameNU != null ?
                new ObjectParameter("CrewNameNU", crewNameNU) :
                new ObjectParameter("CrewNameNU", typeof(string));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var employerIDsParameter = employerIDs != null ?
                new ObjectParameter("EmployerIDs", employerIDs) :
                new ObjectParameter("EmployerIDs", typeof(string));
    
            var employerIDsExParameter = employerIDsEx != null ?
                new ObjectParameter("EmployerIDsEx", employerIDsEx) :
                new ObjectParameter("EmployerIDsEx", typeof(string));
    
            var employerTypesParameter = employerTypes != null ?
                new ObjectParameter("EmployerTypes", employerTypes) :
                new ObjectParameter("EmployerTypes", typeof(string));
    
            var employerTypesExParameter = employerTypesEx != null ?
                new ObjectParameter("EmployerTypesEx", employerTypesEx) :
                new ObjectParameter("EmployerTypesEx", typeof(string));
    
            var employerStatusCodesParameter = employerStatusCodes != null ?
                new ObjectParameter("EmployerStatusCodes", employerStatusCodes) :
                new ObjectParameter("EmployerStatusCodes", typeof(string));
    
            var employerStatusCodesExParameter = employerStatusCodesEx != null ?
                new ObjectParameter("EmployerStatusCodesEx", employerStatusCodesEx) :
                new ObjectParameter("EmployerStatusCodesEx", typeof(string));
    
            var employerStatusCodesIsEmptyParameter = employerStatusCodesIsEmpty.HasValue ?
                new ObjectParameter("EmployerStatusCodesIsEmpty", employerStatusCodesIsEmpty) :
                new ObjectParameter("EmployerStatusCodesIsEmpty", typeof(bool));
    
            var basesParameter = bases != null ?
                new ObjectParameter("Bases", bases) :
                new ObjectParameter("Bases", typeof(string));
    
            var basesExParameter = basesEx != null ?
                new ObjectParameter("BasesEx", basesEx) :
                new ObjectParameter("BasesEx", typeof(string));
    
            var crewTitlesParameter = crewTitles != null ?
                new ObjectParameter("CrewTitles", crewTitles) :
                new ObjectParameter("CrewTitles", typeof(string));
    
            var crewTitlesExParameter = crewTitlesEx != null ?
                new ObjectParameter("CrewTitlesEx", crewTitlesEx) :
                new ObjectParameter("CrewTitlesEx", typeof(string));
    
            var flyCapabilityParameter = flyCapability != null ?
                new ObjectParameter("FlyCapability", flyCapability) :
                new ObjectParameter("FlyCapability", typeof(string));
    
            var flyCapabilityExParameter = flyCapabilityEx != null ?
                new ObjectParameter("FlyCapabilityEx", flyCapabilityEx) :
                new ObjectParameter("FlyCapabilityEx", typeof(string));
    
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("Teacher", teacher) :
                new ObjectParameter("Teacher", typeof(bool));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TrainingStudentStatistic_L_Result>("sp_TrainingStudentStatistic_L", filterTrainingID1Parameter, filterTrainingID2Parameter, filterTrainingID3Parameter, filter1DataTypeParameter, filter2DataTypeParameter, filter3DataTypeParameter, filter1FinalResultParameter, filter2FinalResultParameter, filter3FinalResultParameter, classIDsParameter, crewIDParameter, crewNameNUParameter, toDateParameter, employerIDsParameter, employerIDsExParameter, employerTypesParameter, employerTypesExParameter, employerStatusCodesParameter, employerStatusCodesExParameter, employerStatusCodesIsEmptyParameter, basesParameter, basesExParameter, crewTitlesParameter, crewTitlesExParameter, flyCapabilityParameter, flyCapabilityExParameter, teacherParameter, genderParameter);
        }
    }
}
